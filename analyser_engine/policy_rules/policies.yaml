device:
  HMI_zone1:
    ip: "10.10.10.10" 
    slave_id: 1
  authorised_client_ips : 
   - "10.10.10.11" 

  allowed_client_operrations:
    "10.10.10.11" : 
        -func : " READ_DISCRETE_INPUTS" 
          addresses: [0]
        - func: "READ_COILS"
          addresses: [0] 
        - func: "READ_INPUT_REGISTERS"
          addresses: [0, 1, 2, 3, 4, 5, 6, 7] # Assuming your client reads all 8
        - func: "READ_HOLDING_REGISTERS"
          addresses: [0, 1, 2, 3, 4, 5, 6, 7] # Assuming your client reads all 8
        - func: "ENCAP_INTERFACE_TRANSPORT" # For Read Device Information

        # Write operations expected from PLC1 (adjust based on your modbus_client.py's actual writes)
        - func: "WRITE_SINGLE_COIL"
          addresses: [0] 
        - func: "WRITE_MULTIPLE_COILS"
          addresses: [0] 
        - func: "WRITE_SINGLE_REGISTER"
          addresses: [0] 
        - func: "WRITE_MULTIPLE_REGISTERS"
          addresses: [0]
   # Expected valid ranges for values written to or observed from specific registers/coils.
  register_ranges:
      hr0: [0, 9] # Based on your modbus_client.py's 0-9 validation for HRs
      ir0: [0, 255] # Example sensor range (adjust based on your pymodbus_server.py's internal logic)
   coil_expected_states:
      co0: [True, False] # Binary states for Coil 0 (pump ON/OFF)
